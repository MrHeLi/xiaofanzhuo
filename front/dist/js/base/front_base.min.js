function Barss(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsBtn=$(".sms-captcha-btn")}Barss.prototype.listenBarHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Barss.prototype.runs=function(){this.listenBarHover()},Auth.prototype.showAuthInterface=function(t,n){var s=this;t?(s.maskWrapper.show(),n?s.scrollWrapper.css({left:0}):s.scrollWrapper.css({left:-400})):s.maskWrapper.hide()},Auth.prototype.listenClick=function(){var t=this;$(".signin-btn").click(function(){t.showAuthInterface(!0,!0)}),$(".signup-btn").click(function(){t.showAuthInterface(!0,!1)}),$(".close-btn").click(function(){t.showAuthInterface(!1)}),$(".switch").click(function(){parseInt(t.scrollWrapper.position().left)<0?t.showAuthInterface(!0,!0):t.showAuthInterface(!0,!1)})},Auth.prototype.listenLoginClick=function(){var a=this;console.log("=======listenLoginClick=======");var e=$("#login_tel"),o=$("#login_pwd"),i=$(".check-box");$(".submit-btn").click(function(){var t=e.val(),n=o.val(),s=i.prop("checked");newajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:s?1:0},success:function(t){if(200==t.code)a.showAuthInterface(!1),window.location.reload();else{for(var n in t)t[n];var s=t.message;if("string"==typeof s||s.constructor==String)window.messageBox.show(s);else for(var e in s){var o=s[e][0];window.messageBox.show(o);break}}}})})},Auth.prototype.listenCaptchaClick=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.smsSuccess=function(){var t=this;messageBox.showSuccess("发送短信验证码成功"),t.smsBtn.addClass("disabled"),t.smsBtn.unbind("click");var n=10,s=setInterval(function(){t.smsBtn.text(n+"s"),--n<0&&(clearInterval(s),t.smsBtn.removeClass("disabled"),t.smsBtn.text("发送验证码"),t.listenSmsClick())},1e3)},Auth.prototype.listenSmsClick=function(){var n=this,s=$('.signup-group input[name="telephone"]');n.smsBtn.click(function(){var t=s.val();t?newajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200==t.code&&n.smsSuccess()},fail:function(t){console.log(t)}}):messageBox.showInfo("请输入手机号码")})},Auth.prototype.listenSignup=function(){var f=this,m=$(".signup-group");m.find(".submit-btn").click(function(t){t.preventDefault();var n=m.find("input[name='telephone']"),s=m.find("input[name='username']"),e=m.find("input[name='img_captcha']"),o=m.find("input[name='password1']"),a=m.find("input[name='password2']"),i=m.find("input[name='sms_captcha']"),c=n.val(),r=s.val(),l=e.val(),u=o.val(),p=a.val(),h=i.val();newajax.post({url:"/account/register/",data:{telephone:c,username:r,img_captcha:l,password1:u,password2:p,sms_captcha:h},success:function(t){f.showAuthInterface(!1),window.location.reload()}})})},Auth.prototype.run=function(){this.listenClick(),this.listenLoginClick(),this.listenCaptchaClick(),this.listenSmsClick(),this.listenSignup()},$(function(){(new Auth).run(),(new Barss).runs()}),console.log("=========");
//# sourceMappingURL=data:application/json;charset=utf8;base64,
