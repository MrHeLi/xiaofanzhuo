function Banner(){this.bannerWidth=798,this.bannerGroup=$("#banner-group"),this.index=1,this.leftArrow=$("#left-arrow"),this.rightArrow=$("#right-arrow"),this.bannerUl=$("#banner-ul"),this.liList=this.bannerUl.children("li"),this.bannerCount=this.liList.length,this.pageControl=$(".page-control")}function Index(){this.page=1,this.category_id,template.defaults.imports.timeSince=function(n){var e=(n=new Date(n)).getTime(),t=((new Date).getTime()-e)/1e3;return t<60?"刚刚":60<=t&&t<3600?t/60+"分钟前":3600<=t&&t<86400?int(t/60/60)+"小时前":86400<=t&&t<2592e3?t/60/60/24+"天前":n.getFullYear()+"/"+n.getMonth()+"/"+n.getDay()+" "+n.getHours()+":"+n.getMinutes()}}Banner.prototype.initBanner=function(){var n=this,e=n.liList.eq(0).clone(),t=n.liList.eq(n.bannerCount-1).clone();n.bannerUl.append(e),n.bannerUl.prepend(t),n.bannerUl.css({width:n.bannerWidth*(n.bannerCount+2),left:-n.bannerWidth})},Banner.prototype.initPageControl=function(){for(var n=this,e=0;e<n.bannerCount;e++){var t=$("<li></li>");n.pageControl.append(t),0===e&&t.addClass("active")}n.pageControl.css({width:12*n.bannerCount+16+16*(n.bannerCount-1)})},Banner.prototype.listenBannerHomer=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index++,n.index===n.bannerCount+2&&(n.bannerUl.css({left:-n.bannerWidth}),n.index=2),n.animate()},2e3)},Banner.prototype.toggleArrow=function(n){var e=this;n?(e.leftArrow.show(),e.rightArrow.show()):(e.leftArrow.hide(),e.rightArrow.hide())},Banner.prototype.listenArrowClick=function(){var n=this;n.leftArrow.click(function(){n.index--,n.index<0&&(n.bannerUl.css({left:-n.bannerWidth*n.bannerCount}),n.index=n.bannerCount-1),n.animate()}),n.rightArrow.click(function(){n.index++,n.index>=n.bannerCount+2&&(n.bannerUl.css({left:-n.bannerWidth}),n.index=2),n.animate()})},Banner.prototype.listenPageControl=function(){var t=this;t.pageControl.children("li").each(function(n,e){$(e).click(function(){t.index=n,t.animate()})})},Banner.prototype.animate=function(){var n=this;this.bannerUl.stop().animate({left:-n.bannerWidth*n.index},500);var e=n.index;e=0===e?n.bannerCount-1:e===n.bannerCount+1?0:n.index-1,n.pageControl.children("li").eq(e).addClass("active").siblings().removeClass("active")},Banner.prototype.run=function(){this.loop(),this.listenArrowClick(),this.listenBannerHomer(),this.initPageControl(),this.listenPageControl(),this.initBanner(),console.log("Banner listenArrowClick")},Index.prototype.listenLoadMore=function(){var i=this,r=$("#load-more-btn");r.click(function(){myajax.get({url:"/news/list/",data:{p:i.page,category_id:i.category_id},success:function(n){if(200===n.code){var e=n.data;if(e.length<=0)return void r.hide();var t=template("news-item",{newses:e});$(".list-inner-group").append(t),i.page++}}})})},Index.prototype.listenCategoryClick=function(){var o=this;$(".list-tab").children().click(function(){var r=$(this),n=r.attr("data-category");o.category_id=n;myajax.get({url:"/news/list/",data:{p:1,category_id:n},success:function(n){if(200===n.code){var e=n.data,t=template("news-item",{newses:e}),i=$(".list-inner-group");i.empty(),i.append(t),o.page=1,r.addClass("active").siblings().removeClass("active")}}})})},Index.prototype.run=function(){this.listenLoadMore(),this.listenCategoryClick(),console.log("hello")},$(function(){(new Banner).run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
